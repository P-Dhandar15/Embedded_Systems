Component: ARM Compiler 5.06 update 6 (build 750) Tool: armlink [4d35ed]

==============================================================================

Section Cross References

    startup.o(STACK) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(HEAP) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(RESET) refers to portasm.o(PORT_ASM) for vPortYieldProcessor
    startup.o(RESET) refers to startup.o(STACK) for Stack_Top
    startup.o(RESET) refers to __main.o(!!!main) for __main
    startup.o(.text) refers (Special) to heapauxi.o(.text) for __use_two_region_memory
    startup.o(.text) refers to startup.o(HEAP) for Heap_Mem
    startup.o(.text) refers to startup.o(STACK) for Stack_Mem
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.bss) for ucHeap
    heap_2.o(i.prvHeapInit) refers to heap_2.o(.data) for xStart
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(i.prvHeapInit) for prvHeapInit
    heap_2.o(i.pvPortMalloc) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.pvPortMalloc) refers to heap_2.o(.data) for xHeapHasBeenInitialised
    heap_2.o(i.vPortFree) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    heap_2.o(i.vPortFree) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    heap_2.o(i.vPortFree) refers to heap_2.o(.data) for xStart
    heap_2.o(i.xPortGetFreeHeapSize) refers to heap_2.o(.data) for xFreeBytesRemaining
    port.o(i.prvSetupTimerInterrupt) refers to portasm.o(PORT_ASM) for vPreemptiveTick
    port.o(i.vPortEnterCritical) refers to port.o(.data) for ulCriticalNesting
    port.o(i.vPortExitCritical) refers to port.o(.data) for ulCriticalNesting
    port.o(i.xPortStartScheduler) refers to port.o(i.prvSetupTimerInterrupt) for prvSetupTimerInterrupt
    port.o(i.xPortStartScheduler) refers to portasm.o(PORT_ASM) for vPortStartFirstTask
    portasm.o(PORT_ASM) refers to tasks.o(.data) for pxCurrentTCB
    portasm.o(PORT_ASM) refers to port.o(.data) for ulCriticalNesting
    portasm.o(PORT_ASM) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    portasm.o(PORT_ASM) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    queue.o(i.prvCopyDataFromQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvCopyDataToQueue) refers to rt_memcpy.o(.text) for __aeabi_memcpy
    queue.o(i.prvInitialiseMutex) refers to queue.o(i.xQueueGenericSend) for xQueueGenericSend
    queue.o(i.prvInitialiseNewQueue) refers to queue.o(i.xQueueGenericReset) for xQueueGenericReset
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueEmpty) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvIsQueueFull) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.prvUnlockQueue) refers to tasks.o(i.vTaskMissedYield) for vTaskMissedYield
    queue.o(i.prvUnlockQueue) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueMessagesWaiting) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.uxQueueSpacesAvailable) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.vQueueDelete) refers to heap_2.o(i.vPortFree) for vPortFree
    queue.o(i.xQueueGenericCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    queue.o(i.xQueueGenericCreate) refers to queue.o(i.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReceive) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueGenericReceive) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericReceive) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericReceive) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericReset) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericReset) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueGenericReset) refers to list.o(i.vListInitialise) for vListInitialise
    queue.o(i.xQueueGenericReset) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGenericSend) refers to portasm.o(PORT_ASM) for vPortYield
    queue.o(i.xQueueGenericSend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvIsQueueFull) for prvIsQueueFull
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(i.xQueueGenericSend) refers to queue.o(i.prvUnlockQueue) for prvUnlockQueue
    queue.o(i.xQueueGenericSend) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    queue.o(i.xQueueGenericSendFromISR) refers to queue.o(i.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(i.xQueueGenericSendFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueueGiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(i.xQueuePeekFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to queue.o(i.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(i.xQueueReceiveFromISR) refers to tasks.o(i.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.eTaskGetState) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.eTaskGetState) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.eTaskGetState) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.pcTaskGetName) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.data) for xTickCount
    tasks.o(i.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(i.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(i.prvAddNewTaskToReadyList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.prvAddNewTaskToReadyList) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvAddNewTaskToReadyList) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvAddNewTaskToReadyList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.prvCheckTasksWaitingTermination) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.prvCheckTasksWaitingTermination) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.prvDeleteTCB) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.prvIdleTask) refers to tasks.o(i.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(i.prvIdleTask) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.prvIdleTask) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseNewTask) refers to aeabi_memset.o(.text) for __aeabi_memset
    tasks.o(i.prvInitialiseNewTask) refers to list.o(i.vListInitialiseItem) for vListInitialiseItem
    tasks.o(i.prvInitialiseNewTask) refers to port.o(i.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(i.prvInitialiseTaskLists) refers to list.o(i.vListInitialise) for vListInitialise
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.prvInitialiseTaskLists) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvListTasksWithinSingleList) refers to tasks.o(i.vTaskGetTaskInfo) for vTaskGetTaskInfo
    tasks.o(i.prvResetNextTaskUnblockTime) refers to tasks.o(.data) for pxDelayedTaskList
    tasks.o(i.prvTaskIsTaskSuspended) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.ulTaskNotifyTake) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.ulTaskNotifyTake) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.ulTaskNotifyTake) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetNumberOfTasks) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.uxTaskGetStackHighWaterMark) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.prvListTasksWithinSingleList) for prvListTasksWithinSingleList
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.data) for uxCurrentNumberOfTasks
    tasks.o(i.uxTaskGetSystemState) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.uxTaskPriorityGet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.uxTaskPriorityGet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskPriorityGetFromISR) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.uxTaskResetEventItemValue) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelay) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelay) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelay) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelay) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskDelayUntil) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelayUntil) refers to tasks.o(.data) for xTickCount
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskDelete) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskDelete) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvDeleteTCB) for prvDeleteTCB
    tasks.o(i.vTaskDelete) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskDelete) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskDelete) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskDelete) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskDelete) refers to tasks.o(.bss) for xTasksWaitingTermination
    tasks.o(i.vTaskEndScheduler) refers to port.o(i.vPortEndScheduler) for vPortEndScheduler
    tasks.o(i.vTaskEndScheduler) refers to tasks.o(.data) for xSchedulerRunning
    tasks.o(i.vTaskGetTaskInfo) refers to tasks.o(i.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(i.vTaskGetTaskInfo) refers to tasks.o(i.xTaskResumeAll) for xTaskResumeAll
    tasks.o(i.vTaskGetTaskInfo) refers to tasks.o(i.eTaskGetState) for eTaskGetState
    tasks.o(i.vTaskGetTaskInfo) refers to tasks.o(i.prvTaskCheckFreeStackSpace) for prvTaskCheckFreeStackSpace
    tasks.o(i.vTaskGetTaskInfo) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskMissedYield) refers to tasks.o(.data) for xYieldPending
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskNotifyGiveFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskNotifyGiveFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskPlaceOnEventList) refers to list.o(i.vListInsert) for vListInsert
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskPrioritySet) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskPrioritySet) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskPrioritySet) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskPrioritySet) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskResume) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskResume) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.vTaskResume) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskResume) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskResume) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskResume) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskResume) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskResume) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.vTaskSetTimeOutState) refers to tasks.o(.data) for xNumOfOverflows
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.xTaskCreate) for xTaskCreate
    tasks.o(i.vTaskStartScheduler) refers to port.o(i.xPortStartScheduler) for xPortStartScheduler
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(.data) for xIdleTaskHandle
    tasks.o(i.vTaskStartScheduler) refers to tasks.o(i.prvIdleTask) for prvIdleTask
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.vTaskSuspend) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.vTaskSuspend) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.vTaskSuspend) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.vTaskSuspend) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.vTaskSuspend) refers to tasks.o(i.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(i.vTaskSuspend) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.vTaskSuspend) refers to tasks.o(.bss) for xSuspendedTaskList
    tasks.o(i.vTaskSuspendAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.vTaskSwitchContext) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(i.vTaskSetTimeOutState) for vTaskSetTimeOutState
    tasks.o(i.xTaskCheckForTimeOut) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskCheckForTimeOut) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskCreate) refers to heap_2.o(i.pvPortMalloc) for pvPortMalloc
    tasks.o(i.xTaskCreate) refers to heap_2.o(i.vPortFree) for vPortFree
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(i.xTaskCreate) refers to tasks.o(i.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotify) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotify) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskGenericNotify) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskGenericNotify) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskGenericNotifyFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskGenericNotifyFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskGetTickCount) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskGetTickCount) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskGetTickCountFromISR) refers to tasks.o(.data) for xTickCount
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskIncrementTick) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskIncrementTick) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyStateClear) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyStateClear) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(i.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(i.xTaskNotifyWait) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskNotifyWait) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskNotifyWait) refers to tasks.o(.data) for pxCurrentTCB
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskRemoveFromEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.data) for uxTopReadyPriority
    tasks.o(i.xTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss) for pxReadyTasksLists
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortEnterCritical) for vPortEnterCritical
    tasks.o(i.xTaskResumeAll) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeAll) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(i.xTaskResumeAll) refers to tasks.o(i.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(i.xTaskResumeAll) refers to portasm.o(PORT_ASM) for vPortYield
    tasks.o(i.xTaskResumeAll) refers to port.o(i.vPortExitCritical) for vPortExitCritical
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeAll) refers to tasks.o(.bss) for xPendingReadyList
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(i.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.uxListRemove) for uxListRemove
    tasks.o(i.xTaskResumeFromISR) refers to list.o(i.vListInsertEnd) for vListInsertEnd
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.data) for uxSchedulerSuspended
    tasks.o(i.xTaskResumeFromISR) refers to tasks.o(.bss) for pxReadyTasksLists
    smart_road.o(i.LCDclear) refers to smart_road.o(i.LCDcmd) for LCDcmd
    smart_road.o(i.LCDcmd) refers to smart_road.o(i.delayLCD) for delayLCD
    smart_road.o(i.LCDdata) refers to smart_road.o(i.delayLCD) for delayLCD
    smart_road.o(i.LCDinit) refers to smart_road.o(i.LCDcmd) for LCDcmd
    smart_road.o(i.LCDnewLine) refers to smart_road.o(i.LCDcmd) for LCDcmd
    smart_road.o(i.LCDshiftLeft) refers to smart_road.o(i.LCDcmd) for LCDcmd
    smart_road.o(i.LCDshiftRight) refers to smart_road.o(i.LCDcmd) for LCDcmd
    smart_road.o(i.LCDstart) refers to smart_road.o(i.LCDinit) for LCDinit
    smart_road.o(i.LCDstart) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    smart_road.o(i.LCDstart) refers to smart_road.o(i.LCDdata) for LCDdata
    smart_road.o(i.LCDstart) refers to smart_road.o(i.delayLCD) for delayLCD
    smart_road.o(i.LCDstart) refers to smart_road.o(i.LCDclear) for LCDclear
    smart_road.o(i.LCDstart) refers to smart_road.o(i.LCDnewLine) for LCDnewLine
    smart_road.o(i.LCDstart) refers to smart_road.o(.constdata) for .constdata
    smart_road.o(i.LCDtext) refers to smart_road.o(i.LCDdata) for LCDdata
    smart_road.o(i.main) refers to smart_road.o(i.LCDstart) for LCDstart
    rt_memcpy.o(.text) refers to rt_memcpy_w.o(.text) for __aeabi_memcpy4
    aeabi_memset.o(.text) refers to rt_memclr.o(.text) for _memset
    __main.o(!!!main) refers to __rtentry.o(.ARM.Collect$$rtentry$$00000000) for __rt_entry
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for __rt_entry_li
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for __rt_entry_main
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$0000000C) for __rt_entry_postli_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000009) for __rt_entry_postsh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry2.o(.ARM.Collect$$rtentry$$00000002) for __rt_entry_presh_1
    __rtentry.o(.ARM.Collect$$rtentry$$00000000) refers (Special) to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for __rt_entry_sh
    rt_memclr.o(.text) refers to rt_memclr_w.o(.text) for _memset_w
    __rtentry2.o(.ARM.Collect$$rtentry$$00000008) refers to boardinit2.o(.text) for _platform_post_stackheap_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) refers to libinit.o(.ARM.Collect$$libinit$$00000000) for __rt_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) refers to boardinit3.o(.text) for _platform_post_lib_init
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to exit.o(.text) for exit
    __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) refers to smart_road.o(i.main) for main
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000001) for .ARM.Collect$$rtentry$$00000001
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$00000008) for .ARM.Collect$$rtentry$$00000008
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000A) for .ARM.Collect$$rtentry$$0000000A
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000B) for .ARM.Collect$$rtentry$$0000000B
    __rtentry2.o(.ARM.exidx) refers to __rtentry2.o(.ARM.Collect$$rtentry$$0000000D) for .ARM.Collect$$rtentry$$0000000D
    __rtentry4.o(.ARM.Collect$$rtentry$$00000004) refers to sys_stackheap_outer.o(.text) for __user_setup_stackheap
    __rtentry4.o(.ARM.exidx) refers to __rtentry4.o(.ARM.Collect$$rtentry$$00000004) for .ARM.Collect$$rtentry$$00000004
    sys_stackheap_outer.o(.text) refers to libspace.o(.text) for __user_perproc_libspace
    sys_stackheap_outer.o(.text) refers to startup.o(.text) for __user_initial_stackheap
    exit.o(.text) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for __rt_exit
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002E) for __rt_lib_init_alloca_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000002C) for __rt_lib_init_argv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001B) for __rt_lib_init_atexit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000021) for __rt_lib_init_clock_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000032) for __rt_lib_init_cpp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000030) for __rt_lib_init_exceptions_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000002) for __rt_lib_init_fp_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001F) for __rt_lib_init_fp_trap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000023) for __rt_lib_init_getenv_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000A) for __rt_lib_init_heap_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000011) for __rt_lib_init_lc_collate_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000013) for __rt_lib_init_lc_ctype_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000015) for __rt_lib_init_lc_monetary_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000017) for __rt_lib_init_lc_numeric_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000019) for __rt_lib_init_lc_time_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000004) for __rt_lib_init_preinit_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000E) for __rt_lib_init_rand_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000033) for __rt_lib_init_return
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000001D) for __rt_lib_init_signal_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$00000025) for __rt_lib_init_stdio_1
    libinit.o(.ARM.Collect$$libinit$$00000000) refers (Special) to libinit2.o(.ARM.Collect$$libinit$$0000000C) for __rt_lib_init_user_alloc_1
    libspace.o(.text) refers to libspace.o(.bss) for __libspace_start
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.Collect$$rtexit$$00000000) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for __rt_exit_exit
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for __rt_exit_ls
    rtexit.o(.ARM.exidx) refers (Special) to rtexit2.o(.ARM.Collect$$rtexit$$00000002) for __rt_exit_prels_1
    rtexit.o(.ARM.exidx) refers to rtexit.o(.ARM.Collect$$rtexit$$00000000) for .ARM.Collect$$rtexit$$00000000
    libinit2.o(.ARM.Collect$$libinit$$00000001) refers to fpinit.o(x$fpl$fpinit) for _fp_init
    libinit2.o(.ARM.Collect$$libinit$$00000010) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000012) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000014) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000016) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000018) refers to libinit2.o(.ARM.Collect$$libinit$$0000000F) for .ARM.Collect$$libinit$$0000000F
    libinit2.o(.ARM.Collect$$libinit$$00000026) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    libinit2.o(.ARM.Collect$$libinit$$00000027) refers to argv_veneer.o(.emb_text) for __ARM_argv_veneer
    rtexit2.o(.ARM.Collect$$rtexit$$00000003) refers to libshutdown.o(.ARM.Collect$$libshutdown$$00000000) for __rt_lib_shutdown
    rtexit2.o(.ARM.Collect$$rtexit$$00000004) refers to sys_exit.o(.text) for _sys_exit
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000001) for .ARM.Collect$$rtexit$$00000001
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000003) for .ARM.Collect$$rtexit$$00000003
    rtexit2.o(.ARM.exidx) refers to rtexit2.o(.ARM.Collect$$rtexit$$00000004) for .ARM.Collect$$rtexit$$00000004
    argv_veneer.o(.emb_text) refers to no_argv.o(.text) for __ARM_get_argv
    sys_exit.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_exit.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    _get_argv_nomalloc.o(.text) refers (Special) to hrguard.o(.text) for __heap_region$guard
    _get_argv_nomalloc.o(.text) refers to defsig_rtmem_outer.o(.text) for __rt_SIGRTMEM
    _get_argv_nomalloc.o(.text) refers to sys_command.o(.text) for _sys_command_string
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000002) for __rt_lib_shutdown_cpp_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000007) for __rt_lib_shutdown_fp_trap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F) for __rt_lib_shutdown_heap_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000010) for __rt_lib_shutdown_return
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A) for __rt_lib_shutdown_signal_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$00000004) for __rt_lib_shutdown_stdio_1
    libshutdown.o(.ARM.Collect$$libshutdown$$00000000) refers (Special) to libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C) for __rt_lib_shutdown_user_alloc_1
    sys_command.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_command.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig_rtmem_outer.o(.text) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_rtmem_outer.o(.text) refers to defsig_exit.o(.text) for __sig_exit
    defsig_rtmem_formal.o(.text) refers to rt_raise.o(.text) for __rt_raise
    rt_raise.o(.text) refers to __raise.o(.text) for __raise
    rt_raise.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_exit.o(.text) refers to sys_exit.o(.text) for _sys_exit
    defsig_rtmem_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    __raise.o(.text) refers to __raise.o(i.__ARM_common_call_via_r2) for __ARM_common_call_via_r2
    __raise.o(.text) refers to defsig.o(CL$$defsig) for __default_signal_handler
    defsig_general.o(.text) refers to sys_wrch.o(.text) for _ttywrch
    sys_wrch.o(.text) refers (Special) to use_no_semi.o(.text) for __I$use$semihosting
    sys_wrch.o(.text) refers (Special) to indicate_semi.o(.text) for __semihosting_library_function
    defsig.o(CL$$defsig) refers to defsig_rtmem_inner.o(.text) for __rt_SIGRTMEM_inner
    defsig_abrt_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_fpe_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_rtred_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_stak_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_pvfn_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_cppl_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_segv_inner.o(.text) refers to defsig_general.o(.text) for __default_signal_display
    defsig_other.o(.text) refers to defsig_general.o(.text) for __default_signal_display


==============================================================================

Removing Unused input sections from the image.

    Removing heap_2.o(i.prvHeapInit), (88 bytes).
    Removing heap_2.o(i.pvPortMalloc), (324 bytes).
    Removing heap_2.o(i.vPortFree), (120 bytes).
    Removing heap_2.o(i.vPortInitialiseBlocks), (4 bytes).
    Removing heap_2.o(i.xPortGetFreeHeapSize), (16 bytes).
    Removing heap_2.o(.bss), (16384 bytes).
    Removing heap_2.o(.data), (24 bytes).
    Removing list.o(i.vListInitialise), (44 bytes).
    Removing list.o(i.vListInitialiseItem), (12 bytes).
    Removing list.o(i.vListInsert), (96 bytes).
    Removing port.o(i.prvSetupTimerInterrupt), (112 bytes).
    Removing port.o(i.pxPortInitialiseStack), (260 bytes).
    Removing port.o(i.vPortEndScheduler), (4 bytes).
    Removing port.o(i.vPortEnterCritical), (40 bytes).
    Removing port.o(i.vPortExitCritical), (72 bytes).
    Removing port.o(i.xPortStartScheduler), (24 bytes).
    Removing queue.o(i.prvCopyDataFromQueue), (88 bytes).
    Removing queue.o(i.prvCopyDataToQueue), (208 bytes).
    Removing queue.o(i.prvInitialiseMutex), (60 bytes).
    Removing queue.o(i.prvInitialiseNewQueue), (76 bytes).
    Removing queue.o(i.prvIsQueueEmpty), (52 bytes).
    Removing queue.o(i.prvIsQueueFull), (56 bytes).
    Removing queue.o(i.prvUnlockQueue), (232 bytes).
    Removing queue.o(i.ucQueueGetQueueType), (12 bytes).
    Removing queue.o(i.uxQueueGetQueueNumber), (12 bytes).
    Removing queue.o(i.uxQueueMessagesWaiting), (32 bytes).
    Removing queue.o(i.uxQueueMessagesWaitingFromISR), (12 bytes).
    Removing queue.o(i.uxQueueSpacesAvailable), (44 bytes).
    Removing queue.o(i.vQueueDelete), (28 bytes).
    Removing queue.o(i.vQueueSetQueueNumber), (8 bytes).
    Removing queue.o(i.xQueueGenericCreate), (96 bytes).
    Removing queue.o(i.xQueueGenericReceive), (440 bytes).
    Removing queue.o(i.xQueueGenericReset), (188 bytes).
    Removing queue.o(i.xQueueGenericSend), (380 bytes).
    Removing queue.o(i.xQueueGenericSendFromISR), (188 bytes).
    Removing queue.o(i.xQueueGiveFromISR), (164 bytes).
    Removing queue.o(i.xQueueIsQueueEmptyFromISR), (32 bytes).
    Removing queue.o(i.xQueueIsQueueFullFromISR), (36 bytes).
    Removing queue.o(i.xQueuePeekFromISR), (76 bytes).
    Removing queue.o(i.xQueueReceiveFromISR), (176 bytes).
    Removing tasks.o(i.eTaskGetState), (192 bytes).
    Removing tasks.o(i.pcTaskGetName), (44 bytes).
    Removing tasks.o(i.prvAddCurrentTaskToDelayedList), (208 bytes).
    Removing tasks.o(i.prvAddNewTaskToReadyList), (296 bytes).
    Removing tasks.o(i.prvCheckTasksWaitingTermination), (172 bytes).
    Removing tasks.o(i.prvDeleteTCB), (32 bytes).
    Removing tasks.o(i.prvIdleTask), (36 bytes).
    Removing tasks.o(i.prvInitialiseNewTask), (236 bytes).
    Removing tasks.o(i.prvInitialiseTaskLists), (144 bytes).
    Removing tasks.o(i.prvListTasksWithinSingleList), (188 bytes).
    Removing tasks.o(i.prvTaskCheckFreeStackSpace), (48 bytes).
    Removing tasks.o(i.prvTaskIsTaskSuspended), (132 bytes).
    Removing tasks.o(i.ulTaskNotifyTake), (184 bytes).
    Removing tasks.o(i.uxTaskGetNumberOfTasks), (16 bytes).
    Removing tasks.o(i.uxTaskGetStackHighWaterMark), (68 bytes).
    Removing tasks.o(i.uxTaskGetSystemState), (252 bytes).
    Removing tasks.o(i.uxTaskGetTaskNumber), (32 bytes).
    Removing tasks.o(i.uxTaskPriorityGet), (64 bytes).
    Removing tasks.o(i.uxTaskPriorityGetFromISR), (48 bytes).
    Removing tasks.o(i.uxTaskResetEventItemValue), (48 bytes).
    Removing tasks.o(i.vTaskDelay), (64 bytes).
    Removing tasks.o(i.vTaskDelayUntil), (156 bytes).
    Removing tasks.o(i.vTaskDelete), (256 bytes).
    Removing tasks.o(i.vTaskEndScheduler), (44 bytes).
    Removing tasks.o(i.vTaskGetTaskInfo), (208 bytes).
    Removing tasks.o(i.vTaskMissedYield), (20 bytes).
    Removing tasks.o(i.vTaskNotifyGiveFromISR), (236 bytes).
    Removing tasks.o(i.vTaskPlaceOnEventList), (56 bytes).
    Removing tasks.o(i.vTaskPlaceOnUnorderedEventList), (76 bytes).
    Removing tasks.o(i.vTaskPrioritySet), (324 bytes).
    Removing tasks.o(i.vTaskResume), (172 bytes).
    Removing tasks.o(i.vTaskSetTaskNumber), (20 bytes).
    Removing tasks.o(i.vTaskSetTimeOutState), (36 bytes).
    Removing tasks.o(i.vTaskStartScheduler), (144 bytes).
    Removing tasks.o(i.vTaskSuspend), (220 bytes).
    Removing tasks.o(i.vTaskSuspendAll), (28 bytes).
    Removing tasks.o(i.xTaskCheckForTimeOut), (168 bytes).
    Removing tasks.o(i.xTaskCreate), (164 bytes).
    Removing tasks.o(i.xTaskGenericNotify), (312 bytes).
    Removing tasks.o(i.xTaskGenericNotifyFromISR), (388 bytes).
    Removing tasks.o(i.xTaskGetTickCount), (36 bytes).
    Removing tasks.o(i.xTaskGetTickCountFromISR), (20 bytes).
    Removing tasks.o(i.xTaskNotifyStateClear), (92 bytes).
    Removing tasks.o(i.xTaskNotifyWait), (232 bytes).
    Removing tasks.o(i.xTaskRemoveFromEventList), (204 bytes).
    Removing tasks.o(i.xTaskRemoveFromUnorderedEventList), (172 bytes).
    Removing tasks.o(i.xTaskResumeAll), (380 bytes).
    Removing tasks.o(i.xTaskResumeFromISR), (192 bytes).
    Removing smart_road.o(i.ADC), (160 bytes).
    Removing smart_road.o(i.LCDshiftLeft), (20 bytes).
    Removing smart_road.o(i.LCDshiftRight), (20 bytes).
    Removing smart_road.o(i.LCDtext), (40 bytes).
    Removing smart_road.o(i.delay), (44 bytes).

93 unused section(s) (total 27464 bytes) removed from the image.

==============================================================================

Adding Veneers to the image

    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_init' from __rtentry2.o(.ARM.Collect$$rtentry$$0000000A).
    Adding AT veneer (8 bytes, Inline) for call to '__rt_lib_shutdown' from rtexit2.o(.ARM.Collect$$rtexit$$00000003).
    Adding TA veneer (4 bytes, Inline) for call to '__rt_exit' from exit.o(.text).
    Adding AT veneer (8 bytes, Inline) for call to '_sys_exit' from rtexit2.o(.ARM.Collect$$rtexit$$00000004).

4 Veneer(s) (total 28 bytes) added to the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      260  startup.o(RESET)
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit1.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardshut.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit2.o ABSOLUTE
    ../clib/angel/boardlib.s                 0x00000000   Number         0  boardinit3.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_zi.o ABSOLUTE
    ../clib/angel/handlers.s                 0x00000000   Number         0  __scatter_copy.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry4.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry2.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  __rtentry.o ABSOLUTE
    ../clib/angel/kernel.s                   0x00000000   Number         0  rtexit2.o ABSOLUTE
    ../clib/angel/rt.s                       0x00000000   Number         0  rt_raise.o ABSOLUTE
    ../clib/angel/scatter.s                  0x00000000   Number         0  __scatter.o ABSOLUTE
    ../clib/angel/startup.s                  0x00000000   Number         0  __main.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  use_no_semi.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  libspace.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  sys_stackheap_outer.o ABSOLUTE
    ../clib/angel/sys.s                      0x00000000   Number         0  indicate_semi.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_command.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_exit.o ABSOLUTE
    ../clib/angel/sysapp.c                   0x00000000   Number         0  sys_wrch.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  _get_argv_nomalloc.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  no_argv.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/armsys.c                         0x00000000   Number         0  argv_veneer.o ABSOLUTE
    ../clib/heapalloc.c                      0x00000000   Number         0  hrguard.o ABSOLUTE
    ../clib/heapaux.c                        0x00000000   Number         0  heapauxi.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libshutdown2.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit.o ABSOLUTE
    ../clib/libinit.s                        0x00000000   Number         0  libinit2.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  aeabi_memset.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr_w.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memclr.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy.o ABSOLUTE
    ../clib/memcpset.s                       0x00000000   Number         0  rt_memcpy_w.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_abrt_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtred_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_segv_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_pvfn_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_cppl_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_formal.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_rtmem_outer.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  __raise.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_general.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_stak_inner.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_exit.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_other.o ABSOLUTE
    ../clib/signal.c                         0x00000000   Number         0  defsig_fpe_inner.o ABSOLUTE
    ../clib/signal.s                         0x00000000   Number         0  defsig.o ABSOLUTE
    ../clib/stdlib.c                         0x00000000   Number         0  exit.o ABSOLUTE
    ../fplib/fpinit.s                        0x00000000   Number         0  fpinit.o ABSOLUTE
    Smart_Road.c                             0x00000000   Number         0  smart_road.o ABSOLUTE
    Startup.s                                0x00000000   Number         0  startup.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    heap_2.c                                 0x00000000   Number         0  heap_2.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    portASM.s                                0x00000000   Number         0  portasm.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    Undef_Handler                            0x00000040   ARM Code       4  startup.o(RESET)
    PAbt_Handler                             0x00000048   ARM Code       4  startup.o(RESET)
    DAbt_Handler                             0x0000004c   ARM Code       4  startup.o(RESET)
    IRQ_Handler                              0x00000050   ARM Code       4  startup.o(RESET)
    FIQ_Handler                              0x00000054   ARM Code       4  startup.o(RESET)
    !!!main                                  0x00000104   Section        8  __main.o(!!!main)
    !!!scatter                               0x0000010c   Section       60  __scatter.o(!!!scatter)
    !!handler_copy                           0x00000148   Section       40  __scatter_copy.o(!!handler_copy)
    !!handler_zi                             0x00000170   Section       44  __scatter_zi.o(!!handler_zi)
    .ARM.Collect$$libinit$$00000000          0x000001a4   Section        2  libinit.o(.ARM.Collect$$libinit$$00000000)
    .ARM.Collect$$libinit$$00000002          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    .ARM.Collect$$libinit$$00000004          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    .ARM.Collect$$libinit$$0000000A          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    .ARM.Collect$$libinit$$0000000C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    .ARM.Collect$$libinit$$0000000E          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    .ARM.Collect$$libinit$$00000011          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    .ARM.Collect$$libinit$$00000013          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    .ARM.Collect$$libinit$$00000015          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    .ARM.Collect$$libinit$$00000017          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    .ARM.Collect$$libinit$$00000019          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    .ARM.Collect$$libinit$$0000001B          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    .ARM.Collect$$libinit$$0000001D          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    .ARM.Collect$$libinit$$0000001F          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    .ARM.Collect$$libinit$$00000021          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    .ARM.Collect$$libinit$$00000023          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    .ARM.Collect$$libinit$$00000025          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    .ARM.Collect$$libinit$$0000002C          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    .ARM.Collect$$libinit$$0000002E          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    .ARM.Collect$$libinit$$00000030          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    .ARM.Collect$$libinit$$00000032          0x000001a6   Section        0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    .ARM.Collect$$libinit$$00000033          0x000001a6   Section       12  libinit2.o(.ARM.Collect$$libinit$$00000033)
    .ARM.Collect$$libshutdown$$00000000      0x000001bc   Section        4  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    .ARM.Collect$$libshutdown$$00000002      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    .ARM.Collect$$libshutdown$$00000004      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    .ARM.Collect$$libshutdown$$00000007      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    .ARM.Collect$$libshutdown$$0000000A      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    .ARM.Collect$$libshutdown$$0000000C      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    .ARM.Collect$$libshutdown$$0000000F      0x000001c0   Section        0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    .ARM.Collect$$libshutdown$$00000010      0x000001c0   Section        6  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    .ARM.Collect$$rtentry$$00000000          0x000001c8   Section        0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    .ARM.Collect$$rtentry$$00000002          0x000001c8   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    .ARM.Collect$$rtentry$$00000004          0x000001c8   Section        8  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    .ARM.Collect$$rtentry$$00000009          0x000001d0   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    .ARM.Collect$$rtentry$$0000000A          0x000001d0   Section        4  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    .ARM.Collect$$rtentry$$0000000C          0x000001d4   Section        0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    .ARM.Collect$$rtentry$$0000000D          0x000001d4   Section       40  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    .ARM.Collect$$rtexit$$00000000           0x00000200   Section        4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    .ARM.Collect$$rtexit$$00000002           0x00000204   Section        0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    .ARM.Collect$$rtexit$$00000003           0x00000204   Section        4  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    .ARM.Collect$$rtexit$$00000004           0x00000208   Section        8  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    .text                                    0x00000210   Section       32  startup.o(.text)
    .text                                    0x00000230   Section      100  rt_memcpy_w.o(.text)
    .text                                    0x00000294   Section        0  heapauxi.o(.text)
    .text                                    0x0000029c   Section       96  sys_stackheap_outer.o(.text)
    .text                                    0x000002fc   Section        0  exit.o(.text)
    .text                                    0x00000310   Section       12  libspace.o(.text)
    .text                                    0x00000324   Section        0  sys_exit.o(.text)
    .text                                    0x00000330   Section        4  use_no_semi.o(.text)
    .text                                    0x00000334   Section        0  indicate_semi.o(.text)
    PORT_ASM                                 0x00000334   Section      396  portasm.o(PORT_ASM)
    i.LCDclear                               0x000004c0   Section        0  smart_road.o(i.LCDclear)
    i.LCDcmd                                 0x000004dc   Section        0  smart_road.o(i.LCDcmd)
    i.LCDdata                                0x0000054c   Section        0  smart_road.o(i.LCDdata)
    i.LCDinit                                0x000005bc   Section        0  smart_road.o(i.LCDinit)
    i.LCDnewLine                             0x000005f0   Section        0  smart_road.o(i.LCDnewLine)
    i.LCDstart                               0x00000604   Section        0  smart_road.o(i.LCDstart)
    i.delayLCD                               0x000006cc   Section        0  smart_road.o(i.delayLCD)
    i.main                                   0x000006ec   Section        0  smart_road.o(i.main)
    i.prvResetNextTaskUnblockTime            0x00000838   Section        0  tasks.o(i.prvResetNextTaskUnblockTime)
    prvResetNextTaskUnblockTime              0x00000838   ARM Code      88  tasks.o(i.prvResetNextTaskUnblockTime)
    i.uxListRemove                           0x00000898   Section        0  list.o(i.uxListRemove)
    i.vListInsertEnd                         0x000008e4   Section        0  list.o(i.vListInsertEnd)
    i.vTaskSwitchContext                     0x00000914   Section        0  tasks.o(i.vTaskSwitchContext)
    i.xTaskIncrementTick                     0x000009e0   Section        0  tasks.o(i.xTaskIncrementTick)
    .constdata                               0x00000bc4   Section      102  smart_road.o(.constdata)
    .data                                    0x40000000   Section        4  port.o(.data)
    .data                                    0x40000004   Section       60  tasks.o(.data)
    pxDelayedTaskList                        0x40000008   Data           4  tasks.o(.data)
    pxOverflowDelayedTaskList                0x4000000c   Data           4  tasks.o(.data)
    uxDeletedTasksWaitingCleanUp             0x40000010   Data           4  tasks.o(.data)
    uxCurrentNumberOfTasks                   0x40000014   Data           4  tasks.o(.data)
    xTickCount                               0x40000018   Data           4  tasks.o(.data)
    uxTopReadyPriority                       0x4000001c   Data           4  tasks.o(.data)
    xSchedulerRunning                        0x40000020   Data           4  tasks.o(.data)
    uxPendedTicks                            0x40000024   Data           4  tasks.o(.data)
    xYieldPending                            0x40000028   Data           4  tasks.o(.data)
    xNumOfOverflows                          0x4000002c   Data           4  tasks.o(.data)
    uxTaskNumber                             0x40000030   Data           4  tasks.o(.data)
    xNextTaskUnblockTime                     0x40000034   Data           4  tasks.o(.data)
    xIdleTaskHandle                          0x40000038   Data           4  tasks.o(.data)
    uxSchedulerSuspended                     0x4000003c   Data           4  tasks.o(.data)
    .bss                                     0x40000040   Section      180  tasks.o(.bss)
    pxReadyTasksLists                        0x40000040   Data          80  tasks.o(.bss)
    xDelayedTaskList1                        0x40000090   Data          20  tasks.o(.bss)
    xDelayedTaskList2                        0x400000a4   Data          20  tasks.o(.bss)
    xPendingReadyList                        0x400000b8   Data          20  tasks.o(.bss)
    xTasksWaitingTermination                 0x400000cc   Data          20  tasks.o(.bss)
    xSuspendedTaskList                       0x400000e0   Data          20  tasks.o(.bss)
    .bss                                     0x400000f4   Section       96  libspace.o(.bss)
    HEAP                                     0x40000158   Section        0  startup.o(HEAP)
    STACK                                    0x40000158   Section     1568  startup.o(STACK)
    Heap_Mem                                 0x40000158   Data           0  startup.o(HEAP)
    Stack_Mem                                0x40000158   Data        1568  startup.o(STACK)
    Stack_Top                                0x40000778   Data           0  startup.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv1$ARM_ISAv4$S$PE$A:L22$X:L11$S22$IEEE1$IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$UX$STANDARDLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  smart_road.o ABSOLUTE
    __ARM_exceptions_init                     - Undefined Weak Reference
    __alloca_initialize                       - Undefined Weak Reference
    __arm_preinit_                            - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __rt_locale                               - Undefined Weak Reference
    __sigvec_lookup                           - Undefined Weak Reference
    _atexit_init                              - Undefined Weak Reference
    _call_atexit_fns                          - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _fp_trap_init                             - Undefined Weak Reference
    _fp_trap_shutdown                         - Undefined Weak Reference
    _get_lc_collate                           - Undefined Weak Reference
    _get_lc_ctype                             - Undefined Weak Reference
    _get_lc_monetary                          - Undefined Weak Reference
    _get_lc_numeric                           - Undefined Weak Reference
    _get_lc_time                              - Undefined Weak Reference
    _getenv_init                              - Undefined Weak Reference
    _handle_redirection                       - Undefined Weak Reference
    _init_alloc                               - Undefined Weak Reference
    _init_user_alloc                          - Undefined Weak Reference
    _initio                                   - Undefined Weak Reference
    _rand_init                                - Undefined Weak Reference
    _signal_finish                            - Undefined Weak Reference
    _signal_init                              - Undefined Weak Reference
    _terminate_alloc                          - Undefined Weak Reference
    _terminate_user_alloc                     - Undefined Weak Reference
    _terminateio                              - Undefined Weak Reference
    Reset_Handler                            0x00000058   ARM Code       0  startup.o(RESET)
    __main                                   0x00000104   ARM Code       8  __main.o(!!!main)
    __scatterload                            0x0000010c   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_rt2                        0x0000010c   ARM Code      52  __scatter.o(!!!scatter)
    __scatterload_null                       0x00000120   ARM Code       0  __scatter.o(!!!scatter)
    __scatterload_copy                       0x00000148   ARM Code      40  __scatter_copy.o(!!handler_copy)
    __scatterload_zeroinit                   0x00000170   ARM Code      44  __scatter_zi.o(!!handler_zi)
    Inline ARM to Thumb Veneer to __rt_lib_init 0x0000019c   ARM Code       8  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init                            0x000001a5   Thumb Code     0  libinit.o(.ARM.Collect$$libinit$$00000000)
    __rt_lib_init_alloca_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002E)
    __rt_lib_init_argv_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000002C)
    __rt_lib_init_atexit_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001B)
    __rt_lib_init_clock_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000021)
    __rt_lib_init_cpp_1                      0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000032)
    __rt_lib_init_exceptions_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000030)
    __rt_lib_init_fp_1                       0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000002)
    __rt_lib_init_fp_trap_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001F)
    __rt_lib_init_getenv_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000023)
    __rt_lib_init_heap_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000A)
    __rt_lib_init_lc_collate_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000011)
    __rt_lib_init_lc_ctype_1                 0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000013)
    __rt_lib_init_lc_monetary_1              0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000015)
    __rt_lib_init_lc_numeric_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000017)
    __rt_lib_init_lc_time_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000019)
    __rt_lib_init_preinit_1                  0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000004)
    __rt_lib_init_rand_1                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000E)
    __rt_lib_init_return                     0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000033)
    __rt_lib_init_signal_1                   0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000001D)
    __rt_lib_init_stdio_1                    0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$00000025)
    __rt_lib_init_user_alloc_1               0x000001a7   Thumb Code     0  libinit2.o(.ARM.Collect$$libinit$$0000000C)
    Inline ARM to Thumb Veneer to __rt_lib_shutdown 0x000001b4   ARM Code       8  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown                        0x000001bd   Thumb Code     0  libshutdown.o(.ARM.Collect$$libshutdown$$00000000)
    __rt_lib_shutdown_cpp_1                  0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000002)
    __rt_lib_shutdown_fp_trap_1              0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000007)
    __rt_lib_shutdown_heap_1                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F)
    __rt_lib_shutdown_return                 0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000010)
    __rt_lib_shutdown_signal_1               0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A)
    __rt_lib_shutdown_stdio_1                0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$00000004)
    __rt_lib_shutdown_user_alloc_1           0x000001c1   Thumb Code     0  libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C)
    __rt_entry                               0x000001c8   ARM Code       0  __rtentry.o(.ARM.Collect$$rtentry$$00000000)
    __rt_entry_presh_1                       0x000001c8   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000002)
    __rt_entry_sh                            0x000001c8   ARM Code       0  __rtentry4.o(.ARM.Collect$$rtentry$$00000004)
    __rt_entry_li                            0x000001d0   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000A)
    __rt_entry_postsh_1                      0x000001d0   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$00000009)
    __rt_entry_main                          0x000001d4   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000D)
    __rt_entry_postli_1                      0x000001d4   ARM Code       0  __rtentry2.o(.ARM.Collect$$rtentry$$0000000C)
    Inline Thumb to ARM Veneer to __rt_exit  0x000001fd   Thumb Code     4  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit                                0x00000200   ARM Code       0  rtexit.o(.ARM.Collect$$rtexit$$00000000)
    __rt_exit_ls                             0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000003)
    __rt_exit_prels_1                        0x00000204   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000002)
    __rt_exit_exit                           0x00000208   ARM Code       0  rtexit2.o(.ARM.Collect$$rtexit$$00000004)
    __user_initial_stackheap                 0x00000210   ARM Code       0  startup.o(.text)
    __aeabi_memcpy4                          0x00000230   ARM Code       0  rt_memcpy_w.o(.text)
    __aeabi_memcpy8                          0x00000230   ARM Code       0  rt_memcpy_w.o(.text)
    __rt_memcpy_w                            0x00000230   ARM Code     100  rt_memcpy_w.o(.text)
    _memcpy_lastbytes_aligned                0x0000027c   ARM Code       0  rt_memcpy_w.o(.text)
    __use_two_region_memory                  0x00000295   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_escrow$2region                 0x00000297   Thumb Code     2  heapauxi.o(.text)
    __rt_heap_expand$2region                 0x00000299   Thumb Code     2  heapauxi.o(.text)
    __user_setup_stackheap                   0x0000029c   ARM Code      96  sys_stackheap_outer.o(.text)
    exit                                     0x000002fd   Thumb Code    20  exit.o(.text)
    __user_libspace                          0x00000310   ARM Code      12  libspace.o(.text)
    __user_perproc_libspace                  0x00000310   ARM Code       0  libspace.o(.text)
    __user_perthread_libspace                0x00000310   ARM Code       0  libspace.o(.text)
    Inline ARM to Thumb Veneer to _sys_exit  0x0000031c   ARM Code       8  sys_exit.o(.text)
    _sys_exit                                0x00000325   Thumb Code     8  sys_exit.o(.text)
    __I$use$semihosting                      0x00000330   ARM Code       0  use_no_semi.o(.text)
    __use_no_semihosting_swi                 0x00000330   ARM Code       4  use_no_semi.o(.text)
    __semihosting_library_function           0x00000334   ARM Code       0  indicate_semi.o(.text)
    vPortStartFirstTask                      0x00000334   ARM Code       0  portasm.o(PORT_ASM)
    vPortYield                               0x00000364   ARM Code       0  portasm.o(PORT_ASM)
    vPortYieldProcessor                      0x0000036c   ARM Code       0  portasm.o(PORT_ASM)
    vPreemptiveTick                          0x000003f8   ARM Code       0  portasm.o(PORT_ASM)
    LCDclear                                 0x000004c0   ARM Code      28  smart_road.o(i.LCDclear)
    LCDcmd                                   0x000004dc   ARM Code     108  smart_road.o(i.LCDcmd)
    LCDdata                                  0x0000054c   ARM Code     108  smart_road.o(i.LCDdata)
    LCDinit                                  0x000005bc   ARM Code      52  smart_road.o(i.LCDinit)
    LCDnewLine                               0x000005f0   ARM Code      20  smart_road.o(i.LCDnewLine)
    LCDstart                                 0x00000604   ARM Code     188  smart_road.o(i.LCDstart)
    delayLCD                                 0x000006cc   ARM Code      28  smart_road.o(i.delayLCD)
    main                                     0x000006ec   ARM Code     328  smart_road.o(i.main)
    uxListRemove                             0x00000898   ARM Code      76  list.o(i.uxListRemove)
    vListInsertEnd                           0x000008e4   ARM Code      48  list.o(i.vListInsertEnd)
    vTaskSwitchContext                       0x00000914   ARM Code     184  tasks.o(i.vTaskSwitchContext)
    xTaskIncrementTick                       0x000009e0   ARM Code     440  tasks.o(i.xTaskIncrementTick)
    Region$$Table$$Base                      0x00000c2c   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00000c4c   Number         0  anon$$obj.o(Region$$Table)
    ulCriticalNesting                        0x40000000   Data           4  port.o(.data)
    pxCurrentTCB                             0x40000004   Data           4  tasks.o(.data)
    __libspace_start                         0x400000f4   Data          96  libspace.o(.bss)
    __temporary_stack_top$libspace           0x40000154   Data           0  libspace.o(.bss)



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000104

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00000c8c, Max: 0x00080000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000c4c, Max: 0x00080000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000104   Code   RO            3    RESET               startup.o
    0x00000104   0x00000104   0x00000008   Code   RO          740  * !!!main             c_t.l(__main.o)
    0x0000010c   0x0000010c   0x0000003c   Code   RO          903    !!!scatter          c_t.l(__scatter.o)
    0x00000148   0x00000148   0x00000028   Code   RO          905    !!handler_copy      c_t.l(__scatter_copy.o)
    0x00000170   0x00000170   0x0000002c   Code   RO          907    !!handler_zi        c_t.l(__scatter_zi.o)
    0x0000019c   0x0000019c   0x00000008   Ven    RO          771    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a4   0x000001a4   0x00000002   Code   RO          771    .ARM.Collect$$libinit$$00000000  c_t.l(libinit.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          778    .ARM.Collect$$libinit$$00000002  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          780    .ARM.Collect$$libinit$$00000004  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          783    .ARM.Collect$$libinit$$0000000A  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          785    .ARM.Collect$$libinit$$0000000C  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          787    .ARM.Collect$$libinit$$0000000E  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          790    .ARM.Collect$$libinit$$00000011  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          792    .ARM.Collect$$libinit$$00000013  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          794    .ARM.Collect$$libinit$$00000015  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          796    .ARM.Collect$$libinit$$00000017  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          798    .ARM.Collect$$libinit$$00000019  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          800    .ARM.Collect$$libinit$$0000001B  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          802    .ARM.Collect$$libinit$$0000001D  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          804    .ARM.Collect$$libinit$$0000001F  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          806    .ARM.Collect$$libinit$$00000021  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          808    .ARM.Collect$$libinit$$00000023  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          810    .ARM.Collect$$libinit$$00000025  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          814    .ARM.Collect$$libinit$$0000002C  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          816    .ARM.Collect$$libinit$$0000002E  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          818    .ARM.Collect$$libinit$$00000030  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x00000000   Code   RO          820    .ARM.Collect$$libinit$$00000032  c_t.l(libinit2.o)
    0x000001a6   0x000001a6   0x0000000c   Code   RO          821    .ARM.Collect$$libinit$$00000033  c_t.l(libinit2.o)
    0x000001b2   0x000001b2   0x00000002   PAD
    0x000001b4   0x000001b4   0x00000008   Ven    RO          841    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001bc   0x000001bc   0x00000004   Code   RO          841    .ARM.Collect$$libshutdown$$00000000  c_t.l(libshutdown.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          854    .ARM.Collect$$libshutdown$$00000002  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          856    .ARM.Collect$$libshutdown$$00000004  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          859    .ARM.Collect$$libshutdown$$00000007  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          862    .ARM.Collect$$libshutdown$$0000000A  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          864    .ARM.Collect$$libshutdown$$0000000C  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000000   Code   RO          867    .ARM.Collect$$libshutdown$$0000000F  c_t.l(libshutdown2.o)
    0x000001c0   0x000001c0   0x00000006   Code   RO          868    .ARM.Collect$$libshutdown$$00000010  c_t.l(libshutdown2.o)
    0x000001c6   0x000001c6   0x00000002   PAD
    0x000001c8   0x000001c8   0x00000000   Code   RO          742    .ARM.Collect$$rtentry$$00000000  c_t.l(__rtentry.o)
    0x000001c8   0x000001c8   0x00000000   Code   RO          746    .ARM.Collect$$rtentry$$00000002  c_t.l(__rtentry2.o)
    0x000001c8   0x000001c8   0x00000008   Code   RO          758    .ARM.Collect$$rtentry$$00000004  c_t.l(__rtentry4.o)
    0x000001d0   0x000001d0   0x00000000   Code   RO          748    .ARM.Collect$$rtentry$$00000009  c_t.l(__rtentry2.o)
    0x000001d0   0x000001d0   0x00000004   Code   RO          749    .ARM.Collect$$rtentry$$0000000A  c_t.l(__rtentry2.o)
    0x000001d4   0x000001d4   0x00000000   Code   RO          751    .ARM.Collect$$rtentry$$0000000C  c_t.l(__rtentry2.o)
    0x000001d4   0x000001d4   0x00000028   Code   RO          752    .ARM.Collect$$rtentry$$0000000D  c_t.l(__rtentry2.o)
    0x000001fc   0x000001fc   0x00000004   Ven    RO          775    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000200   0x00000200   0x00000004   Code   RO          775    .ARM.Collect$$rtexit$$00000000  c_t.l(rtexit.o)
    0x00000204   0x00000204   0x00000000   Code   RO          823    .ARM.Collect$$rtexit$$00000002  c_t.l(rtexit2.o)
    0x00000204   0x00000204   0x00000004   Code   RO          824    .ARM.Collect$$rtexit$$00000003  c_t.l(rtexit2.o)
    0x00000208   0x00000208   0x00000008   Code   RO          825    .ARM.Collect$$rtexit$$00000004  c_t.l(rtexit2.o)
    0x00000210   0x00000210   0x00000020   Code   RO            4    .text               startup.o
    0x00000230   0x00000230   0x00000064   Code   RO          734    .text               c_t.l(rt_memcpy_w.o)
    0x00000294   0x00000294   0x00000006   Code   RO          738    .text               c_t.l(heapauxi.o)
    0x0000029a   0x0000029a   0x00000002   PAD
    0x0000029c   0x0000029c   0x00000060   Code   RO          762    .text               c_t.l(sys_stackheap_outer.o)
    0x000002fc   0x000002fc   0x00000014   Code   RO          764    .text               c_t.l(exit.o)
    0x00000310   0x00000310   0x0000000c   Code   RO          772    .text               c_t.l(libspace.o)
    0x0000031c   0x0000031c   0x00000008   Ven    RO          833    .text               c_t.l(sys_exit.o)
    0x00000324   0x00000324   0x0000000c   Code   RO          833    .text               c_t.l(sys_exit.o)
    0x00000330   0x00000330   0x00000004   Code   RO          844    .text               c_t.l(use_no_semi.o)
    0x00000334   0x00000334   0x00000000   Code   RO          846    .text               c_t.l(indicate_semi.o)
    0x00000334   0x00000334   0x0000018c   Code   RO          169    PORT_ASM            portasm.o
    0x000004c0   0x000004c0   0x0000001c   Code   RO          633    i.LCDclear          smart_road.o
    0x000004dc   0x000004dc   0x00000070   Code   RO          634    i.LCDcmd            smart_road.o
    0x0000054c   0x0000054c   0x00000070   Code   RO          635    i.LCDdata           smart_road.o
    0x000005bc   0x000005bc   0x00000034   Code   RO          636    i.LCDinit           smart_road.o
    0x000005f0   0x000005f0   0x00000014   Code   RO          637    i.LCDnewLine        smart_road.o
    0x00000604   0x00000604   0x000000c8   Code   RO          640    i.LCDstart          smart_road.o
    0x000006cc   0x000006cc   0x00000020   Code   RO          643    i.delayLCD          smart_road.o
    0x000006ec   0x000006ec   0x0000014c   Code   RO          644    i.main              smart_road.o
    0x00000838   0x00000838   0x00000060   Code   RO          331    i.prvResetNextTaskUnblockTime  tasks.o
    0x00000898   0x00000898   0x0000004c   Code   RO           89    i.uxListRemove      list.o
    0x000008e4   0x000008e4   0x00000030   Code   RO           93    i.vListInsertEnd    list.o
    0x00000914   0x00000914   0x000000cc   Code   RO          358    i.vTaskSwitchContext  tasks.o
    0x000009e0   0x000009e0   0x000001e4   Code   RO          365    i.xTaskIncrementTick  tasks.o
    0x00000bc4   0x00000bc4   0x00000066   Data   RO          645    .constdata          smart_road.o
    0x00000c2a   0x00000c2a   0x00000002   PAD
    0x00000c2c   0x00000c2c   0x00000020   Data   RO          901    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x40000000, Load base: 0x00000c4c, Size: 0x00000778, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x40000000   0x00000c4c   0x00000004   Data   RW          131    .data               port.o
    0x40000004   0x00000c50   0x0000003c   Data   RW          373    .data               tasks.o
    0x40000040        -       0x000000b4   Zero   RW          372    .bss                tasks.o
    0x400000f4        -       0x00000060   Zero   RW          773    .bss                c_t.l(libspace.o)
    0x40000154   0x00000c8c   0x00000004   PAD
    0x40000158        -       0x00000000   Zero   RW            2    HEAP                startup.o
    0x40000158        -       0x00000620   Zero   RW            1    STACK               startup.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0      13584   heap_2.o
       124          0          0          0          0       1612   list.o
         0          0          0          4          0       1412   port.o
       396         24          0          0          0        288   portasm.o
       888         28        102          0          0       4386   smart_road.o
       292         60          0          0       1568        620   startup.o
       784         72          0         60        180       5485   tasks.o

    ----------------------------------------------------------------------
      2484        184        136         64       1748      27387   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          2          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         8          0          0          0          0         68   __main.o
         0          0          0          0          0          0   __rtentry.o
        44          4          0          0          0          0   __rtentry2.o
         8          0          0          0          0          0   __rtentry4.o
        60          8          0          0          0          0   __scatter.o
        40          0          0          0          0          0   __scatter_copy.o
        44          0          0          0          0          0   __scatter_zi.o
        20          0          0          0          0         80   exit.o
         6          0          0          0          0        136   heapauxi.o
         0          0          0          0          0          0   indicate_semi.o
        10          0          0          0          0          0   libinit.o
        12          0          0          0          0          0   libinit2.o
        12          0          0          0          0          0   libshutdown.o
         6          0          0          0          0          0   libshutdown2.o
        12          4          0          0         96         68   libspace.o
       100          0          0          0          0         80   rt_memcpy_w.o
         8          0          0          0          0          0   rtexit.o
        12          0          0          0          0          0   rtexit2.o
        20          4          0          0          0         60   sys_exit.o
        96          0          0          0          0         80   sys_stackheap_outer.o
         4          0          0          0          0         68   use_no_semi.o

    ----------------------------------------------------------------------
       528         20          0          0        100        640   Library Totals
         6          0          0          0          4          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       522         20          0          0         96        640   c_t.l

    ----------------------------------------------------------------------
       528         20          0          0        100        640   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

      3012        204        136         64       1848      27415   Grand Totals
      3012        204        136         64       1848      27415   ELF Image Totals
      3012        204        136         64          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                 3148 (   3.07kB)
    Total RW  Size (RW Data + ZI Data)              1912 (   1.87kB)
    Total ROM Size (Code + RO Data + RW Data)       3212 (   3.14kB)

==============================================================================

